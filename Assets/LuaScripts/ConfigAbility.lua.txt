local ConfigAbility = {
    -- 名字
    name = "",
    -- 持续时间
    duration = 1 / 0,
    -- 最大层数
    stackLimit = 1,
    -- 属性
    attrs = {},

    inject = function(self, varName)
        return CS.Kirara.AttrEffect.AbilitySet.Inject(self.name, varName)
    end,

    setTimer = function(self, handle, time)
        self.abilitySet:SetTimer(handle, time)
    end,

    hasTimer = function(self, handle)
        return self.abilitySet:HasTimer(handle)
    end,

    attachAbility = function(self, abilityName)
        self.abilitySet:AttachAbility(abilityName)
    end,

    refreshPolicy_RefreshMin = function(self)
        local minIdx = 1
        local min = self.remainingTimes[1]
        for i = 2, #self.remainingTimes do
            if self.remainingTimes[i] < min then
                minIdx = i
                min = self.remainingTimes[i]
            end
        end
        self.remainingTimes[minIdx] = self.duration
    end,

    refreshPolicy_RefreshAll = function(self)
        for i = 1, #self.remainingTimes do
            self.remainingTimes[i] = self.duration
        end
    end,

    update = function(self, dt)
        local i = 1
        while i <= #self.remainingTimes do
            self.remainingTimes[i] = self.remainingTimes[i] - dt
            if self.remainingTimes[i] <= 0 then
                table.remove(self.remainingTimes, i)
                self.stackCount = self.stackCount - 1
            else
                i = i + 1
            end
        end
    end,

    onAttached = function(self)
        if self.stackCount < self.stackLimit then
            table.insert(self.remainingTimes, self.duration)
            self.stackCount = self.stackCount + 1
            if self.stackRefreshPolicy ~= nil then
                self:stackRefreshPolicy()
            end
        else
            if self.overflowRefreshPolicy ~= nil then
                self:overflowRefreshPolicy()
            end
        end
    end
}
ConfigAbility.stackRefreshPolicy = nil
ConfigAbility.overflowRefreshPolicy = ConfigAbility.refreshPolicy_RefreshMin

return ConfigAbility